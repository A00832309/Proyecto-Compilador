
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA CTE_FLOAT CTE_INT CTE_STRING DIV DO ELSE END EQ FLOAT GT ID IF INT LBRACE LCO LPAREN LT MAIN MINUS MULT NEQ PLUS PRINT PROGRAM RBRACE RCO RPAREN SEMI VAR VOID WHILEprogram : PROGRAM ID SEMI vars_decls func_decls MAIN body ENDfunc_decls : func_decl func_decls\n                  | func_decl\n                  | emptyfunc_decl : VOID ID LPAREN params RPAREN LCO local_vars body RCO SEMIparams : param_list\n              | emptyparam_list : ID COLON type\n                 | ID COLON type COMMA param_listbody : LBRACE statements RBRACEstatements : statement statements\n                  | emptystatement : assignment\n                 | condition\n                 | loop\n                 | func_call\n                 | print_stmtassignment : ID EQ expression SEMIcondition : IF LPAREN expression RPAREN body else_part SEMIelse_part : ELSE body\n                 | emptyloop : WHILE LPAREN expression RPAREN DO body SEMIfunc_call : ID LPAREN args RPAREN SEMIargs : expression_list\n            | emptyexpression_list : expression\n                       | expression COMMA expression_listprint_stmt : PRINT LPAREN print_args RPAREN SEMIprint_args : print_list\n                  | emptyprint_list : printable\n                 | printable COMMA print_listprintable : expression\n                | CTE_STRINGvars_decls : vars_decl vars_decls\n                  | emptyvars_decl : VAR ID list_ids COLON type SEMIlist_ids : COMMA ID list_ids\n                | emptylocal_vars : vars_decl local_vars\n                  | emptytype : INT\n            | FLOATexpression : simple_expression\n                  | simple_expression relop simple_expressionsimple_expression : term\n                         | term PLUS simple_expression\n                         | term MINUS simple_expressionterm : factor\n            | factor mulop termfactor : LPAREN expression RPAREN\n              | facestrc facestrc : PLUS faciden\n                | MINUS faciden\n                | faciden  faciden : ID\n                | ctecte : CTE_INT\n           | CTE_FLOATrelop : LT\n             | GT\n             | NEQmulop : MULT\n             | DIVempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,26,],[0,-1,]),'ID':([2,8,12,19,22,23,28,30,31,32,33,34,49,50,51,52,53,61,62,64,84,85,86,87,88,89,90,93,94,95,98,102,103,112,116,126,128,],[3,14,17,25,35,39,35,-13,-14,-15,-16,-17,57,57,57,57,57,57,57,57,-18,57,-60,-61,-62,57,57,57,-63,-64,57,57,39,-23,-28,-19,-22,]),'SEMI':([3,43,44,45,47,57,58,59,60,63,65,66,67,68,69,91,92,97,101,107,108,109,110,111,114,121,123,124,125,127,],[4,56,-42,-43,-10,-56,84,-44,-46,-49,-52,-55,-57,-58,-59,-53,-54,112,116,-45,-47,-48,-50,-51,-65,126,-21,128,129,-20,]),'VAR':([4,6,56,83,105,],[8,8,-37,8,8,]),'VOID':([4,5,6,7,10,13,56,129,],[-65,12,-65,-36,12,-35,-37,-5,]),'MAIN':([4,5,6,7,9,10,11,13,16,56,129,],[-65,-65,-65,-36,15,-3,-4,-35,-2,-37,-5,]),'COMMA':([14,25,44,45,57,59,60,63,65,66,67,68,69,73,79,80,81,82,91,92,107,108,109,110,111,],[19,19,-42,-43,-56,-44,-46,-49,-52,-55,-57,-58,-59,98,102,-33,-34,103,-53,-54,-45,-47,-48,-50,-51,]),'COLON':([14,18,20,25,39,46,],[-65,24,-39,-65,54,-38,]),'LBRACE':([15,56,83,99,104,105,106,115,120,122,],[22,-37,-65,22,22,-65,-41,22,-40,22,]),'LPAREN':([17,35,36,37,38,49,50,51,52,53,64,85,86,87,88,89,90,93,94,95,98,102,],[23,50,51,52,53,64,64,64,64,64,64,64,-60,-61,-62,64,64,64,-63,-64,64,64,]),'END':([21,47,],[26,-10,]),'RBRACE':([22,27,28,29,30,31,32,33,34,48,84,112,116,126,128,],[-65,47,-65,-12,-13,-14,-15,-16,-17,-11,-18,-23,-28,-19,-22,]),'IF':([22,28,30,31,32,33,34,84,112,116,126,128,],[36,36,-13,-14,-15,-16,-17,-18,-23,-28,-19,-22,]),'WHILE':([22,28,30,31,32,33,34,84,112,116,126,128,],[37,37,-13,-14,-15,-16,-17,-18,-23,-28,-19,-22,]),'PRINT':([22,28,30,31,32,33,34,84,112,116,126,128,],[38,38,-13,-14,-15,-16,-17,-18,-23,-28,-19,-22,]),'RPAREN':([23,40,41,42,44,45,50,53,57,59,60,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,91,92,96,107,108,109,110,111,113,117,118,],[-65,55,-6,-7,-42,-43,-65,-65,-56,-44,-46,-49,-52,-55,-57,-58,-59,97,-24,-25,-26,99,100,101,-29,-30,-31,-33,-34,-8,-53,-54,111,-45,-47,-48,-50,-51,-27,-32,-9,]),'INT':([24,54,],[44,44,]),'FLOAT':([24,54,],[45,45,]),'EQ':([35,],[49,]),'ELSE':([47,114,],[-10,122,]),'RCO':([47,119,],[-10,125,]),'PLUS':([49,50,51,52,53,57,60,63,64,65,66,67,68,69,85,86,87,88,89,90,91,92,93,94,95,98,102,110,111,],[61,61,61,61,61,-56,89,-49,61,-52,-55,-57,-58,-59,61,-60,-61,-62,61,61,-53,-54,61,-63,-64,61,61,-50,-51,]),'MINUS':([49,50,51,52,53,57,60,63,64,65,66,67,68,69,85,86,87,88,89,90,91,92,93,94,95,98,102,110,111,],[62,62,62,62,62,-56,90,-49,62,-52,-55,-57,-58,-59,62,-60,-61,-62,62,62,-53,-54,62,-63,-64,62,62,-50,-51,]),'CTE_INT':([49,50,51,52,53,61,62,64,85,86,87,88,89,90,93,94,95,98,102,],[68,68,68,68,68,68,68,68,68,-60,-61,-62,68,68,68,-63,-64,68,68,]),'CTE_FLOAT':([49,50,51,52,53,61,62,64,85,86,87,88,89,90,93,94,95,98,102,],[69,69,69,69,69,69,69,69,69,-60,-61,-62,69,69,69,-63,-64,69,69,]),'CTE_STRING':([53,102,],[81,81,]),'LCO':([55,],[83,]),'MULT':([57,63,65,66,67,68,69,91,92,111,],[-56,94,-52,-55,-57,-58,-59,-53,-54,-51,]),'DIV':([57,63,65,66,67,68,69,91,92,111,],[-56,95,-52,-55,-57,-58,-59,-53,-54,-51,]),'LT':([57,59,60,63,65,66,67,68,69,91,92,108,109,110,111,],[-56,86,-46,-49,-52,-55,-57,-58,-59,-53,-54,-47,-48,-50,-51,]),'GT':([57,59,60,63,65,66,67,68,69,91,92,108,109,110,111,],[-56,87,-46,-49,-52,-55,-57,-58,-59,-53,-54,-47,-48,-50,-51,]),'NEQ':([57,59,60,63,65,66,67,68,69,91,92,108,109,110,111,],[-56,88,-46,-49,-52,-55,-57,-58,-59,-53,-54,-47,-48,-50,-51,]),'DO':([100,],[115,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars_decls':([4,6,],[5,13,]),'vars_decl':([4,6,83,105,],[6,6,105,105,]),'empty':([4,5,6,10,14,22,23,25,28,50,53,83,105,114,],[7,11,7,11,20,29,42,20,29,72,78,106,106,123,]),'func_decls':([5,10,],[9,16,]),'func_decl':([5,10,],[10,10,]),'list_ids':([14,25,],[18,46,]),'body':([15,99,104,115,122,],[21,114,119,124,127,]),'statements':([22,28,],[27,48,]),'statement':([22,28,],[28,28,]),'assignment':([22,28,],[30,30,]),'condition':([22,28,],[31,31,]),'loop':([22,28,],[32,32,]),'func_call':([22,28,],[33,33,]),'print_stmt':([22,28,],[34,34,]),'params':([23,],[40,]),'param_list':([23,103,],[41,118,]),'type':([24,54,],[43,82,]),'expression':([49,50,51,52,53,64,98,102,],[58,73,74,75,80,96,73,80,]),'simple_expression':([49,50,51,52,53,64,85,89,90,98,102,],[59,59,59,59,59,59,107,108,109,59,59,]),'term':([49,50,51,52,53,64,85,89,90,93,98,102,],[60,60,60,60,60,60,60,60,60,110,60,60,]),'factor':([49,50,51,52,53,64,85,89,90,93,98,102,],[63,63,63,63,63,63,63,63,63,63,63,63,]),'facestrc':([49,50,51,52,53,64,85,89,90,93,98,102,],[65,65,65,65,65,65,65,65,65,65,65,65,]),'faciden':([49,50,51,52,53,61,62,64,85,89,90,93,98,102,],[66,66,66,66,66,91,92,66,66,66,66,66,66,66,]),'cte':([49,50,51,52,53,61,62,64,85,89,90,93,98,102,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'args':([50,],[70,]),'expression_list':([50,98,],[71,113,]),'print_args':([53,],[76,]),'print_list':([53,102,],[77,117,]),'printable':([53,102,],[79,79,]),'relop':([59,],[85,]),'mulop':([63,],[93,]),'local_vars':([83,105,],[104,120,]),'else_part':([114,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMI vars_decls func_decls MAIN body END','program',8,'p_program','parser.py',12),
  ('func_decls -> func_decl func_decls','func_decls',2,'p_func_decls','parser.py',17),
  ('func_decls -> func_decl','func_decls',1,'p_func_decls','parser.py',18),
  ('func_decls -> empty','func_decls',1,'p_func_decls','parser.py',19),
  ('func_decl -> VOID ID LPAREN params RPAREN LCO local_vars body RCO SEMI','func_decl',10,'p_func_decl','parser.py',32),
  ('params -> param_list','params',1,'p_params','parser.py',62),
  ('params -> empty','params',1,'p_params','parser.py',63),
  ('param_list -> ID COLON type','param_list',3,'p_param_list','parser.py',67),
  ('param_list -> ID COLON type COMMA param_list','param_list',5,'p_param_list','parser.py',68),
  ('body -> LBRACE statements RBRACE','body',3,'p_body','parser.py',79),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',84),
  ('statements -> empty','statements',1,'p_statements','parser.py',85),
  ('statement -> assignment','statement',1,'p_statement','parser.py',93),
  ('statement -> condition','statement',1,'p_statement','parser.py',94),
  ('statement -> loop','statement',1,'p_statement','parser.py',95),
  ('statement -> func_call','statement',1,'p_statement','parser.py',96),
  ('statement -> print_stmt','statement',1,'p_statement','parser.py',97),
  ('assignment -> ID EQ expression SEMI','assignment',4,'p_assignment','parser.py',103),
  ('condition -> IF LPAREN expression RPAREN body else_part SEMI','condition',7,'p_condition','parser.py',131),
  ('else_part -> ELSE body','else_part',2,'p_else_part','parser.py',169),
  ('else_part -> empty','else_part',1,'p_else_part','parser.py',170),
  ('loop -> WHILE LPAREN expression RPAREN DO body SEMI','loop',7,'p_loop','parser.py',191),
  ('func_call -> ID LPAREN args RPAREN SEMI','func_call',5,'p_func_call','parser.py',225),
  ('args -> expression_list','args',1,'p_args','parser.py',233),
  ('args -> empty','args',1,'p_args','parser.py',234),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',239),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','parser.py',240),
  ('print_stmt -> PRINT LPAREN print_args RPAREN SEMI','print_stmt',5,'p_print_stmt','parser.py',250),
  ('print_args -> print_list','print_args',1,'p_print_args','parser.py',266),
  ('print_args -> empty','print_args',1,'p_print_args','parser.py',267),
  ('print_list -> printable','print_list',1,'p_print_list','parser.py',271),
  ('print_list -> printable COMMA print_list','print_list',3,'p_print_list','parser.py',272),
  ('printable -> expression','printable',1,'p_printable','parser.py',279),
  ('printable -> CTE_STRING','printable',1,'p_printable','parser.py',280),
  ('vars_decls -> vars_decl vars_decls','vars_decls',2,'p_vars_decls','parser.py',285),
  ('vars_decls -> empty','vars_decls',1,'p_vars_decls','parser.py',286),
  ('vars_decl -> VAR ID list_ids COLON type SEMI','vars_decl',6,'p_vars_decl','parser.py',293),
  ('list_ids -> COMMA ID list_ids','list_ids',3,'p_list_ids','parser.py',300),
  ('list_ids -> empty','list_ids',1,'p_list_ids','parser.py',301),
  ('local_vars -> vars_decl local_vars','local_vars',2,'p_local_vars','parser.py',308),
  ('local_vars -> empty','local_vars',1,'p_local_vars','parser.py',309),
  ('type -> INT','type',1,'p_type','parser.py',317),
  ('type -> FLOAT','type',1,'p_type','parser.py',318),
  ('expression -> simple_expression','expression',1,'p_expression','parser.py',323),
  ('expression -> simple_expression relop simple_expression','expression',3,'p_expression','parser.py',324),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression','parser.py',363),
  ('simple_expression -> term PLUS simple_expression','simple_expression',3,'p_simple_expression','parser.py',364),
  ('simple_expression -> term MINUS simple_expression','simple_expression',3,'p_simple_expression','parser.py',365),
  ('term -> factor','term',1,'p_term','parser.py',394),
  ('term -> factor mulop term','term',3,'p_term','parser.py',395),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',423),
  ('factor -> facestrc','factor',1,'p_factor','parser.py',424),
  ('facestrc -> PLUS faciden','facestrc',2,'p_facestrc','parser.py',432),
  ('facestrc -> MINUS faciden','facestrc',2,'p_facestrc','parser.py',433),
  ('facestrc -> faciden','facestrc',1,'p_facestrc','parser.py',434),
  ('faciden -> ID','faciden',1,'p_faciden','parser.py',442),
  ('faciden -> cte','faciden',1,'p_faciden','parser.py',443),
  ('cte -> CTE_INT','cte',1,'p_cte','parser.py',456),
  ('cte -> CTE_FLOAT','cte',1,'p_cte','parser.py',457),
  ('relop -> LT','relop',1,'p_relop','parser.py',467),
  ('relop -> GT','relop',1,'p_relop','parser.py',468),
  ('relop -> NEQ','relop',1,'p_relop','parser.py',469),
  ('mulop -> MULT','mulop',1,'p_mulop','parser.py',474),
  ('mulop -> DIV','mulop',1,'p_mulop','parser.py',475),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',481),
]
